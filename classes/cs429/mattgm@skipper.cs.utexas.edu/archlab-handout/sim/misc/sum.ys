		.pos 0
init:	irmovq Stack, %rsp
		irmovq Stack, %rbp
		jmp Main


Main:	irmovq	ele1, %rax
		pushq	%rax
		call	Sum
		halt

Sum:	pushq	%rbp
		rrmovq	%rsp, %rbp
		subq	%rdx, %rsp
		irmovq	$0, %rdx
		rmmovq	%rdx, -8(%rbp)
		jmp		L2

L3:
		mrmoq	16(%rbp), %rax
		mrmovq	(%rax), %rax
		mrmovq	-8(%rbp), %rdx
		addq	%rax, %rdx
		rmmovq	%rdx, -8(%rbp)
		mrmovq	16(%rbp), %rax
		mrmovq	8(%rax), %rax
		mrmovq	8(%rax), %rax
		rmmovq	%rax, 16(%rbp)

L2:
		irmovq	$0, %rcx
		mrmovq	16(%rbp), %rdx
		subq	%rcx, %rdx
		jne		L3
		mrmovq	-8(%rbp), %rax
		rrmovq	%rbp, %rsp
		popl	%rbp
		ret

.align 8
	ele1:
		.quad 0x00a
		.quad ele2
	ele2:
		.quad 0x0b0
		.quad ele3
	ele3:
		.quad 0xc00
		.quad 0

		.pos 0x300
Stack: 
